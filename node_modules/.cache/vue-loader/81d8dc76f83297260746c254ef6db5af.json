{"remainingRequest":"/opt/lampp/htdocs/terminal/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/terminal/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/opt/lampp/htdocs/terminal/src/App.vue","mtime":1589030329801},{"path":"/opt/lampp/htdocs/terminal/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/terminal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/terminal/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/terminal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/terminal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKYm9keSB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzEwMTAxMDsKfQoKI2FwcCB7CiAgZm9udC1mYW1pbHk6IFVidW50dSwgQXZlbmlyLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmOwogIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkOwogIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7CiAgY29sb3I6IHJnYigyMSwgMjA0LCAyMSk7CiAgbWFyZ2luLXRvcDogMjBweDsKfQoKLmNvbnRhaW5lci1mbHVpZCB7CiAgbWFyZ2luOiAxNXB4OwogIHBhZGRpbmc6IDE1cHg7CiAgd2lkdGg6IDEwMCU7Cn0KCi5yb3cgewogIG1hcmdpbjogLTE1cHg7CiAgcGFkZGluZzogLTE1cHg7CiAgd2lkdGg6IDEwMCU7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Cgoud3JhcHBlciB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIC8qIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyAqLwogIHdpZHRoOiA5NyU7CiAgLyogaGVpZ2h0OiAxMDBweDsgKi8KICB0ZXh0LWFsaWduOiBsZWZ0OwogIGZvbnQtc2l6ZTogMThweDsKICBmb250LXdlaWdodDogNTIwOwogIGxpbmUtaGVpZ2h0OiAzMHB4Owp9Ci5pbnB1dCB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwp9CgoudGFibGUgewogIGJvcmRlci1jb2xvcjogcmdiKDIxLCAyMDQsIDIxKTsKICBib3JkZXItc3R5bGU6IGRhc2hlZDsKfQoKdGQgewogIGZvbnQtd2VpZ2h0OiA0MDA7CiAgcGFkZGluZzogMjBweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgYm9yZGVyLXN0eWxlOiBkYXNoZWQ7Cn0KCmEgewogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICBjb2xvcjogI2I2YjZiNjsKfQoKYTpob3ZlciB7CiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"wrapper\" id=\"history\" v-html=\"history + cursor\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport func from \"./func\";\nexport default {\n  name: \"App\",\n  components: {},\n  data() {\n    return {\n      blink: false,\n      user: \"guest@alirezaonline.xyz:~$ \",\n      cursor: \"_\",\n      hint:\n        '<div style=\"font-size: 14px; font-weight: 500;\">(to see help, please use \"-help\" command)</div>',\n      welcome: \"Hi\",\n      history: \"\",\n      response: \"\",\n      input: \"\",\n      cursorBlinking: null,\n      typingInterval: null,\n      command: \"\"\n    };\n  },\n  created() {\n    this.typing(this.welcome + \"<br/>\" + this.hint + \"<br/>\" + this.user);\n  },\n  mounted() {},\n  methods: {\n    typing(str) {\n      this.stopInputListening();\n      let self = this;\n      this.stopBlinking();\n      str = str.split(\"\");\n      let i = 0;\n      this.typingInterval = setInterval(() => {\n        if (i < str.length) {\n          self.history += str[i];\n        } else {\n          self.stopTyping();\n        }\n        i++;\n      }, 20);\n    },\n    startBlinking() {\n      let self = this;\n      this.cursorBlinking = setInterval(() => {\n        if (self.blink) {\n          this.cursor = \"\";\n          self.blink = false;\n        } else {\n          this.cursor = \"_\";\n          self.blink = true;\n        }\n      }, 700);\n    },\n    stopBlinking() {\n      clearInterval(this.cursorBlinking);\n    },\n    stopTyping() {\n      clearInterval(this.typingInterval);\n      this.startBlinking();\n      this.startInputListener();\n    },\n    startInputListener() {\n      document.body.addEventListener(\"keydown\", this.eventFunction);\n    },\n    eventFunction() {\n      this.stopBlinking();\n      if (event.keyCode == 13) {\n        if (this.command == \"\") {\n          this.history += \"<br/>\" + this.user;\n        } else if (this.command == \"clear\") {\n          this.history = this.user;\n        } else {\n          this.typing(func.commandExecution(this.command));\n        }\n        this.command = \"\";\n      } else if (event.keyCode == 8) {\n        this.backSpace();\n      } else if (event.key.length == 1) {\n        this.command += event.key;\n        this.history += event.key;\n      }\n      this.startBlinking();\n    },\n    stopInputListening() {\n      document.body.removeEventListener(\"keydown\", this.eventFunction);\n    },\n    backSpace() {\n      if (this.command.length > 0) {\n        this.command = this.command.substring(0, this.command.length - 1);\n        this.history = this.history.substring(0, this.history.length - 1);\n      }\n    }\n  },\n  destroyed() {\n    this.stopBlinking();\n    clearInterval(this.typingInterval);\n  }\n};\n</script>\n\n<style>\nbody {\n  background-color: #101010;\n}\n\n#app {\n  font-family: Ubuntu, Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: rgb(21, 204, 21);\n  margin-top: 20px;\n}\n\n.container-fluid {\n  margin: 15px;\n  padding: 15px;\n  width: 100%;\n}\n\n.row {\n  margin: -15px;\n  padding: -15px;\n  width: 100%;\n  text-align: center;\n}\n\n.wrapper {\n  display: inline-block;\n  /* background-color: white; */\n  width: 97%;\n  /* height: 100px; */\n  text-align: left;\n  font-size: 18px;\n  font-weight: 520;\n  line-height: 30px;\n}\n.input {\n  display: inline-block;\n}\n\n.table {\n  border-color: rgb(21, 204, 21);\n  border-style: dashed;\n}\n\ntd {\n  font-weight: 400;\n  padding: 20px;\n  text-align: center;\n  border-style: dashed;\n}\n\na {\n  text-decoration: none;\n  color: #b6b6b6;\n}\n\na:hover {\n  text-decoration: underline;\n}\n</style>\n"]}]}